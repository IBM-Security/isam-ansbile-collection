---
- name: Federation Cookbook SP Part 1 (Ch 4 to 8)
  hosts: all
  gather_facts: no
  vars:
    homedir: "/home/demouser/IAM/isam-ansible-collection/playbooks/federation_cookbook"
  tasks:
    - include_vars:
        file: "fed_cookbook_sp_vars.yml"
        name: inventory

    - name: "4.2 Enable NTP"
      include_role:
        name: ibm.isam.config_ntp
      vars:
        - config_ntp_ntp_servers: "{{ inventory.ntpServers }}"
          config_ntp_timeZone: "{{ inventory.timeZone }}"

    - name: "4.3 Product Activation"
      include_role:
        name: ibm.isam.base.activate_modules
      vars:
        activation_keys: "{{ inventory.activation_keys }}"

    - name: "4.4 Configure Runtime Interfaces"
      include_role:
        name: ibm.isam.base.add_interfaces
      vars:
        interfaces:
          - label: "{{ inventory.label }}"
            addresses:
              - address: "{{ inventory.address }}"
                maskOrPrefix: "{{ inventory.maskOrPrefix }}"
                allowManagement: "{{ inventory.allowManagement }}"
                enabled: "{{ inventory.enabled }}"

    - name: "4.5 Update Hosts File on the Appliance"
      include_role:
        name: ibm.isam.base.set_host_records
      vars:
        - host_records: "{{ inventory.host_records }}"

    - name: "4.6 Configure ISAM Runtime Component on the Appliance"
      include_role:
        name: ibm.isam.web.configure_policyserver
      vars:
        - policyserver_runtime:
            configuration:
              admin_pwd: "{{ inventory.admin_pwd }}"
              ps_mode: "{{ inventory.ps_mode }}"
              user_registry: "{{ inventory.user_registry }}"
              ldap_pwd: "{{ inventory.ldap_pwd }}"
              admin_cert_lifetime: "{{ inventory.admin_cert_lifetime}}"
              ssl_compliance: "{{ inventory.ssl_compliance }}"
        - policyserver_connection_inactivity: "{{ inventory.policyserver_connection_inactivity }}"

    - name: "5.1 Create new Reverse Proxy"
      include_role:
        name: ibm.isam.create_reverseproxy
      vars:
        create_reverseproxy_inst_name: "{{ inventory.inst_name }}"
        create_reverseproxy_admin_pwd: "{{ inventory.admin_pwd }}"
        create_reverseproxy_host: "{{ inventory.host }}"
        create_reverseproxy_listening_port: "{{ inventory.listening_port }}"
        create_reverseproxy_domain: "{{ inventory.domain }}"
        create_reverseproxy_admin_id: "{{ inventory.admin_id }}"
        create_reverseproxy_ssl_yn: "{{ inventory.ssl_yn }}"
        create_reverseproxy_http_yn: "{{ inventory.http_yn }}"
        create_reverseproxy_https_yn: "{{ inventory.https_yn }}"
        create_reverseproxy_https_port: "{{ inventory.https_port }}"
        create_reverseproxy_nw_interface_yn: "{{ inventory.nw_interface_yn }}"
        create_reverseproxy_ip_address: "{{ inventory.ip_address }}"

    - name: "5.2 Modify Reverse Proxy Instance Settings"
      include_role:
        name: ibm.isam.set_reverseproxy_conf
      vars:
        set_reverseproxy_conf_entries: "{{ inventory.set_reverseproxy_conf_entries }}"
        set_reverseproxy_conf_reverseproxy_id: "{{ inventory.inst_name }}"

    - name: "5.2 Restart Reverse Proxy Instance"
      include_role:
        name: ibm.isam.execute_rp_op
      vars:
        execute_rp_op_ids: "{{ inventory.execute_rp_op_ids }}"
        execute_rp_op_operation: "{{ inventory.execute_rp_op_operation }}"

#7 Create SAML 2.0 Service Provider federation
    - name: "7.1 Uploading keystore files"
      include_role:
        name: ibm.isam.import_certificate_db
      vars:
        import_certificate_db_kdb: "{{ homedir }}/{{ inventory.import_certificate_db_kdb }}"
        import_certificate_db_sth: "{{ homedir }}/{{ inventory.import_certificate_db_sth }}"

    - name: "7.2 Upload mapping rules"
      include_role:
        name: ibm.isam.aac.configure_mapping_rules
      vars:
        inventory_dir: "{{ homedir }}/{{ inventory.inventory_dir }}"
        mapping_rules: "{{ inventory.mapping_rules }}"

    - name: "7.3 Create Federation: get mapping rule id"
      include_role:
        name: ibm.isam.search_mapping_rule
      vars:
        search_mapping_rule_name: "{{ inventory.search_mapping_rule_name }}"

    - name: "7.3 Create Federation: create the federation"
      include_role:
        name: ibm.isam.fed.set_federation_from_file
      vars:
        set_federation_from_file:
          - name: "{{ inventory.fed_name}}"
            protocol: "{{ inventory.protocol }}"
            role: "{{ inventory.role }}"
            filename: "{{ homedir }}/{{ inventory.spfed }}"
            mapping_id: "{{ ret_obj.data }}"

    - name: "7.4 Export meta-data"
      include_role:
        name: ibm.isam.fed.export_metadata
      vars:
        - export_metadata_name: "{{ inventory.fed_name }}"
        - export_metadata_filename: "{{ homedir }}/{{ inventory.export_metadata_filename }}"

#8.2 ISAM Configuration for SP
    - name: "8.2.1 Configure Reverse Proxy for SP"
      include_role:
        name: ibm.isam.config_reverseproxy_federation
      vars:
        config_reverseproxy_federation_name: "{{ inventory.fed_name }}"
        config_reverseproxy_federation_instance_id: "{{ inventory.inst_name }}"
        config_reverseproxy_federation_hostname: "{{ inventory.config_reverseproxy_federation_hostname }}"
        config_reverseproxy_federation_port: "{{ inventory.config_reverseproxy_federation_port }}"
        config_reverseproxy_federation_reuse_certs: "{{ inventory.config_reverseproxy_federation_reuse_certs }}"
        config_reverseproxy_federation_reuse_acls: "{{ inventory.config_reverseproxy_federation_reuse_acls }}"

    - name: "8.2.2 Environment-specific configuration"
      include_role:
        name: ibm.isam.set_reverseproxy_conf
      vars:
        set_reverseproxy_conf_entries: "{{ inventory.set_reverseproxy_conf_entries_8_2_2 }}"
        set_reverseproxy_conf_reverseproxy_id: "{{ inventory.inst_name }}"

    - name: "8.2.3 Add anonymous user"
      include_role:
        name: ibm.isam.execute_pdadmin
      vars:
        execute_pdadmin_isamuser: "{{ inventory.execute_pdadmin_isamuser }}"
        execute_pdadmin_isampwd: "{{ inventory.execute_pdadmin_isampwd }}"
        execute_pdadmin_commands: "{{ inventory.execute_pdadmin_commands }}"
