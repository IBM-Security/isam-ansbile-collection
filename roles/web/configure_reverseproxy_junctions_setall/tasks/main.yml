---
- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: true
    prompt: |
      NAME
        web.configure_reverseproxy_junctions_setall

      DESCRIPTION
        Role to configure reverse proxy junctions and servers
        This is a lot faster when there are no changes

      STEPS
        1) Configure reverse proxy junctions and servers
        3) Commit changes

      EXAMPLES
        ansible-playbook -i [...] ibm.isam.web.configure_reverseproxy_junctions_setall.yml

      INVENTORY
      ==========
      # configure /tcp1 junction for instance default
      instances:
        - inst_name: default
          junctions:
            # necessary parameters
            - junction_point: "/jct1"
              junction_type: "tcp"
              servers:
                - server_hostname: "localhost"
                  server_port: 443
            # all parameters
            - junction_point: "/jct2"
              junction_type: "tcp"
              transparent_path_junction: "yes"
              basic_auth_mode: filter
              remote_http_header:
                - iv-user
                - iv-creds
                - iv-user-l
              scripting_support: "yes"
              stateful_junction: "yes"
              junction_hard_limit: 80
              junction_soft_limit: 60
              tfim_sso: "yes"
              mutual_auth: "no"
              insert_ltpa_cookies: "yes"
              insert_session_cookies: "no"
              version_two_cookies: "yes"
              ltpa_keyfile_password: "'{{ '{{' }} ltpa_pwd {{ '}}' }}'"
              ltpa_keyfile: "ltpafile.key"
              request_encoding: "utf8_uri"
              enable_basic_auth: "no"
              key_label: "key1_certificate"
              gso_resource_group: "gsogroup1"
              junction_cookie_javascript_block: "inhead"
              client_ip_http: "no"
              authz_rules: "yes"
              fsso_config_file: "fsso.file"
              username: "user1"
              password: "'{{ '{{' }} user1_password {{ '}}' }}'"
              delegation_support: "yes"
              http2_junction: "no"
              http2_proxy: "no"
              sni_name: "iexist.example.com"
              description: "Test application point of contact"
              servers:
                - server_hostname: "server1.example.com"
                  virtual_hostname: "idontexist.com:81"
                  query_contents: /server2/cgi-bin/query
                  https_port: 444
                  http_port: 81
                  server_port: 443
                - server_hostname: "server2.example.com"
                  server_dn: "CN=server2.example.com"
                  virtual_https_hostname: "idontexist.com:444"
                  case_sensitive_url: 'no'
                  windows_style_url: 'no'
                  vhost_label: "label2"
                  server_uuid: server2_uuid
                  proxy_hostname: proxy.ibm.com
                  proxy_port: 82
                  sms_environment: vhostA.example.com
                  local_ip: "192.168.42.1"
                  server_port: 443
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Create junctions and servers
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.reverse_proxy.junctions.set_all
    isamapi: "{{ {'junctions': item.junctions} | combine({'reverseproxy_id': item.inst_name}) }}"
  loop: "{{ instances }}"
  loop_control:
    label: Processing junctions {{ item.junctions | default([]) | map(attribute='junction_point') | join(', ') }} for {{ item.inst_name | default('') }}
  when:
    - item.junctions is defined
  register: ret_obj
