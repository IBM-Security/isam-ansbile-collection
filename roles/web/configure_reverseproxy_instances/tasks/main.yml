---
- name: Help INFO (-e help=true)
  pause:
    echo: yes
    prompt: |
      NAME
        configure_reverseproxy_instances

      DESCRIPTION
        Role to configure existing reverse proxy instances

      STEPS
        1) Configure reverse proxy
        2) Commit changes
        *) NOT INCLUDED: Restart reverse proxy instance (use web/restart_reverseproxy_instances role to restart instances with pending changes)

      EXAMPLES
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml -e inst_name=default // limits changes to one instance only
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml -e method=set // limits changes to a particular method
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml -e stanza_id=custom // limits changes to a particular stanza_id
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml -e entry_id=my-entry-id // limits changes to a particular entry_id !ATTENTION!: entry_id's will also be removed at runtime from entries leaving only elements in entries matching the filter.
        # !ATTENTION!: no filter for value_id supported
        # filter combination is supported
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_reverseproxy_instances.yml -e inst_name=default -e stanza_id=custom -e entry_id=my-entry-id
      INVENTORY
      ==========
      # configure default reverse proxy instance
      # [...] indicate other instances or instance parameter that other roles (e.g. create_reverseproxy_instances) might use.
      # this sample demonstrates various methods and parameters available for this role
      # before deletion reverse proxy instance 'default' contains this:
      #  [custom]
      #  my-entry-id = my-fancy-value
      #  my-entry-id = my-fancy-value
      instances:
        [...]
        - inst_name: default
          [...]
          entries:
            # various methods set, add, delete, delete_all:
            - { method: set, stanza_id: custom, entries: [[my-entry-id, my-fancy-value]] }
            - { method: add, stanza_id: custom, entries: [[my-entry-id, my-fancy-value]] } # !ATTENTION!: Does not add my-entry-id because same value already exists
            - { method: set, stanza_id: custom, entries: [[my-entry-id, my-fancy-value],[my-entry-id, my-fancy-value]] } # Set multiple entries. Order is observed !
            - { method: delete, stanza_id: custom, entry_id: my-entry-id, value_id: my-fancy-value }
            - { method: delete_all, stanza_id: custom, entry_id: my-entry-id }
            - { method: delete, stanza_id: custom }
            # other notation
            - stanza: custom
              entries:
                - [my-entry-id, my-fancy-value]
                - [my-entry-id, my-fancy-value]
            # yet another notation
             - stanza: custom
               entries:
                 -
                   - my-entry-id
                   - my-fancy-value
                 -
                   - my-entry-id
                   - my-fancy-value
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined
- name: Configure reverse proxy instances
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: "ibmsecurity.isam.web.reverse_proxy.configuration.{{ 'entry' if (item.1.entries is defined or item.1.entry_id is defined) else 'stanza'}}.{{ item.1.method }}"
    isamapi: "{{ item.1 | ibm.isam.exclude('method') | combine({ 'reverseproxy_id': item.0.inst_name }) | ibm.isam.include_only(entry_id) }}"
  with_subelements:
    - "{{ instances }}"
    - entries
    - skip_missing: true
  when:
    - item.0.inst_name == inst_name
    - item.1.method == method
    - item.1.stanza_id == stanza_id
    - (item.1.entries is defined and ((item.1.entries | ibm.isam.include_only(entry_id)) != [])) or
      (item.1.entry_id is defined and item.1.entry_id == entry_id and entry_id != '') or
      (item.1.entries is not defined and item.1.entry_id is not defined and entry_id == '')
  loop_control:
    label: "{'method': {{ item.1.method }}, inst_name: {{ item.0.inst_name }}, stanza_id: {{ item.1.stanza_id }}{{ (', ' + \"'entries'\" + ': ' + (item.1.entries | join(''))) if item.1.entries is defined }}{{ (', ' + \"'entry_id'\" + ': ' + item.1.entry_id) if item.1.entry_id is defined }}{{ (', ' + \"'value_id'\" + ': ' + item.1.value_id) if item.1.value_id is defined }}}"
  notify: Commit Changes
