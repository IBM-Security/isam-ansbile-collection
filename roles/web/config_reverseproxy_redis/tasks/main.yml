---
- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: yes
    prompt: |
      NAME
        config_reverseproxy_redis

      DESCRIPTION
        Role to configure_redis

      STEPS
        1) Create collection with servers (Redis master + replicas)
        2) Assign collection to instances
        3) The reverse proxy needs to be restarted after this , this is not implemented as a handler !

      EXAMPLES
        ansible-playbook -i [...] playbooks/ansible_collections/web/configure_redis.yml # do all steps
        ansible-playbook -i [...] ibm.isam.web.configure_redis.yml -e dsess_enabled=False #Disable redis

      INVENTORY
      ==========

      instances:
          [...]
        - inst_name: default
          [...]
          # assign redis collections to instance
          redis_collections:
           - collection1

      redis_collections:
          - name: collection1
            servers:
              - name: master
                host: redis1.domain.com
                username: isam
                port: 6379
                password: password
              - name: replica1
                host: replica1.domain.com
                username: isam
                port: 6379
                password: password
            cross-domain-support:
              master-authn-server-url: master.domain.com
              master-session-code-lifetime: 30

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Configure redis collections
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.global_settings.redis_configuration.collections.set
    isamapi:
      name: "{{ item.name }}"
      max_pooled_connections: "{{ item.max_pooled_connections|default(omit) }}"
      idle_timeout: "{{ item.idle_timeout|default(omit) }}"
      connect_timeout: "{{ item.connect_timeout|default(omit) }}"
      io_timeout: "{{ item.io_timeout|default(omit) }}"
      health_check_interval: "{{ item.health_check_interval|default(omit) }}"
      servers: "{{ item.servers|default(omit) }}"
      cross_domain_support: "{{ item.cross_domain_support|default(omit) }}"
      matching_hosts: "{{ item.matching_hosts|default(omit) }}"
  when:
    - item.name is defined
  loop: "{{ redis_collections }}"
  loop_control:
    label: "Redis collection: {{ item.name | default('') }}"
  notify: Commit Changes

- name: Configure reverse proxy for redis
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: ibmsecurity.isam.web.global_settings.redis_configuration.wrp.update
    isamapi:
      name: "{{ item.inst_name }}"
      input_data: "{{ item.redis_collections }}"
  loop: "{{ instances }}"
  loop_control:
    label: "{{ item.inst_name|default('') }} : redis collections : {{ (item.redis_collections|default([]))|join(',') }} "
  when:
    - instances is defined
    - item.inst_name is defined
    - item.redis_collections is defined
    - item.redis_collections|length > 0
  notify: Commit Changes

- name: prepare enabling/disabling dsess ({{ dsess_enabled }})
  set_fact:
    _instances: "{{ (_instances|default([])) + [{
          'inst_name': item.inst_name,
          'entries': ((dsess_enabled|bool)|ternary(_dsess_redis_entries_enable,_dsess_redis_entries_disable))}
      ]}}"
  loop: "{{ instances }}"
  loop_control:
    label: "Processing {{ item.inst_name|default('not set') }}"
  when:
    - instances is defined
    - item.inst_name is defined
    - item.redis_collections is defined
    - item.redis_collections|length > 0

- name: Enable/disable Redis enabled distributed session
  vars:
    instances: "{{ _instances }}"
  include_role:
    name: web/configure_reverseproxy_instances
  when:
    - _instances is defined

- ansible.builtin.meta: flush_handlers
