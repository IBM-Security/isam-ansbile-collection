---
# main task to execute pdadmin commands
- name: Help INFO (-e help=true)
  ansible.builtin.pause:
    echo: true
    prompt: |
      NAME
        execute_pdadmin

      DESCRIPTION
        Role to execute pdadmin commands

      STEPS
        1) Merge pdadmin commands (only if enable_ansible_merge_vars=True)
        2) Execute pdadmin commands
        3) Pretty print Output of PDAdmin command execution

      EXAMPLES
        ansible-playbook -i [...] playbooks/ansible_collections/web/execute_pdadmin.yml
        # review pdadmin command to be executed on a per host base without executing them
        ansible-playbook -i [...] playbooks/ansible_collections/web/execute_pdadmin.yml --check -vvv
         # merging pdadmin_commands before execution (see INVENTORY section for details)
        ansible-playbook -i [...] playbooks/ansible_collections/web/execute_pdadmin.yml -e enable_ansible_merge_vars=True

      INVENTORY
      ==========
      # execute pdadmin commands
      # Attention:
      #  - order is important !
      #  - last command should be successful in order to see full command output. Faild commands might produce only stack trace from ansible execution.
      pdadmin_commands:
        - user list * 10
        - server list
        - "user create testuser1 uid=testuser1,dc=iswga testuser1 testuser1 {{ '{{' }} testuser1_password {{ '}}' }}"
        - help
        - exit

      # sample for merging pdadmin_commands  (-e enable_ansible_merge_vars=True)
      # The syntax is similar to the merge_vars plugin (that is no longer required)
      # sample hosts file content:
      #  [isva]
      #  isva-1.ibm.com
      # group_vars/isva.yml:
      1_level_pdadmin_commands__to_merge:
        - user list * 10
        - server list
      # host_vars/isva-1.ibm.com.yml:
      2_level_pdadmin_commands__to_merge:
        - "user create testuser1 uid=testuser1,dc=iswga testuser1 testuser1 {{ '{{' }} testuser1_password {{ '}}' }}"
        - help
        - exit
      # Note that the variables get merged in ansible variable precendence order, with values from later dicts replacing values from earlier dicts.
      # Precedence: group_vars < host_vars < extra vars (full-list: https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#variable-precedence-where-should-i-put-a-variable)
      # Additionaly enable sorted merge vars with enable_ansible_merge_vars_sorted to get alphabetical order of their names (e.g. -e enable_ansible_merge_vars_sorted=True)
      # E.g. example will produce pdadmin_commands at runtime
      #  pdadmin_commands:
      #   - user list * 10
      #   - server list
      #   - "user create testuser1 uid=testuser1,dc=iswga testuser1 testuser1 {{ '{{' }} testuser1_password {{ '}}' }}"
      #   - help
      #   - exit
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Locate pdadmin_commands to merge
  set_fact:
    pd_admin_varstomerge: "{{ lookup('varnames', '.+pdadmin_commands__to_merge$', wantlist=True) }}"
  when:
    - enable_ansible_merge_vars|bool

- name: Debug pd_admin_varstomerge before merge [-vv]
  debug:
    var: pd_admin_varstomerge
    verbosity: 2

- name: Merge the pdadmin_commands [unsorted]
  set_fact:
    pdadmin_commands: "{{ pdadmin_commands|default([])  + lookup('vars', item) }}"
  loop: "{{ pd_admin_varstomerge }}"
  when:
    - enable_ansible_merge_vars|bool
    - not enable_ansible_merge_vars_sorted|bool
    - pd_admin_varstomerge is defined

- name: Merge the pdadmin_commands [sorted]
  set_fact:
    pdadmin_commands: "{{ pdadmin_commands|default([])  + lookup('vars', item) }}"
  loop: "{{ pd_admin_varstomerge | sort }}"
  when:
    - enable_ansible_merge_vars|bool
    - enable_ansible_merge_vars_sorted|bool
    - pd_admin_varstomerge is defined

- name: debug the pdadmin commands after merge [-vv]
  debug:
    var: pdadmin_commands
    verbosity: 2

- name: Run PDAdmin commands
  ibm.isam.isamadmin:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    isamuser: "{{ admin_id }}"
    isampwd: "{{ admin_pwd }}"
    isamdomain: "{{ admin_domain }}"
    commands: "{{ pdadmin_commands }}"
  when:
    - pdadmin_commands is defined
    - pdadmin_commands | length > 0
  ignore_errors: true
  register: ret_obj

- name: Output of PDAdmin command execution
  debug:
    msg: "{{ ret_obj.data.result.split('\n') if (ret_obj is defined and ret_obj.data is defined) else 'VARIABLE IS NOT DEFINED!' }}"
  when:
    - not ansible_check_mode
