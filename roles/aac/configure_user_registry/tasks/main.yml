---

# main task to configure user registry

- name: Help INFO (-e help=true)
  pause:
    echo: yes
    prompt: |
      NAME
        configure_user_registry

      DESCRIPTION
        Role to configure user registry

      STEPS
        1) Configure user registry
        2) Commit changes

      EXAMPLES
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml // do all tasks

        // filter for specific task at runtime
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml -e registry_action=set_pw
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml -e registry_action=get_all
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml -e registry_action=get
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml -e registry_action=add
        ansible-playbook -i [...] playbooks/ansible_collections/aac/configure_user_registry.yml -e registry_action=delete

      INVENTORY
      ==========
      user_registry:
        # set password for existing user registry user
        - registry_action: user.set_pw
          id: easuser
          password: "{{ '{{' }} easuser_password {{ '}}' }}" # this variable should be secured in an ansible-vault
        # get all registry users
        - registry_action: user.get_all
        # get a particular user. Check if user exists and get groups user belongs to
        - registry_action: user.get
          id: easuser
        # add a new user + add directly to adminGroup
        - registry_action: user.add
          id: new_user
          password: "{{ '{{' }} new_user_password {{ '}}' }}" # this variable should be secured in an ansible-vault
          groups:
            - adminGroup
        # delete an existing user
        - registry_action: user.delete
          id: new_user
        # get all defined groups
        - registry_action: group.get_all
        # get users inside group
        - registry_action: group.get
          id: new_user
        # add existing user to group
        - registry_action: group.add_user
          user_name: new_user
          id: adminGroup # ! Attention this is the group and not the user id
        # remove user from group
        - registry_action: group.delete_user
          user_name: new_user
          id: adminGroup
      ==========

      INTERACTION
        ENTER         = continue
        Ctrl+C + 'C'  = continue
        Ctrl+C + 'A'  = abort
  when: help is defined

- name: Configure user registry
  ibm.isam.isam:
    log: "{{ log_level | default(omit) }}"
    force: "{{ force | default(omit) }}"
    action: "ibmsecurity.isam.aac.user_registry.{{ item.registry_action }}"
    isamapi: "{{ item | ibm.isam.exclude('registry_action') }}"
  when:
    - item.registry_action is defined
    - item.registry_action == registry_action
  loop: "{{ user_registry }}"
  loop_control:
    label: "{
      'registry_action': {{ item.registry_action }}
      {{ (', ' + \"'id'\" + ': ' + item.id) if item.id is defined }}
      {{ (', ' + \"'password'\" + ': ********') if item.password is defined }}
    }"
  notify: Commit Changes
  register: ret_obj
