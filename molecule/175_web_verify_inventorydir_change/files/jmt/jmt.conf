# Server-relative URLs generated on the client-side by applets and scripts
# initially lack knowledge of the junction point. WebSEAL cannot filter the
# URL because it is generated on the client-side.
#
# During a client request for a resource using this URL, WebSEAL can attempt to
# reprocess the server-relative URL using a junction mapping table. A junction
# mapping table maps specific target resources to junction names. Junction
# mapping is an alternative to the cookie-based solution for filtering
# dynamically generated server-relative URLs.
#
# WebSEAL checks the location information in the server-relative URL with the
# data contained in the junction mapping table. WebSEAL begins searching from
# the top of the table and continues downward through the table. If the path
# information in the URL matches any entry in the table during the top-down
# search, WebSEAL directs the request to the junction associated with that
# location.
#
# The format for the data within this file consists of the junction name, a
# space, and the resource location pattern. You can also use wildcard
# characters to express the resource location pattern.
#
# In the following example of the junction mapping configuration file, two
# back-end servers are junctioned to WebSEAL at /jctA and /jctB:
#    /jctA /documents/release-notes.html
#    /jctA /travel/index.html
#    /jctB /accounts/*
#    /jctB /images/weather/*.jpg
/jctA /documents/release-notes.html
/jctA /travel/index.html
/jctB /accounts/*
/jctB /images/weather/*.jpg
